--ETL FOR date:
--: https://postgrespro.ru/docs/postgresql/9.6/functions-datetime
--: BETWEEN    http://www.postgresqltutorial.com/postgresql-between/
CREATE TEMP TABLE ETL_1 (
	  employee_id serial primary key,
	  first_name varchar,
	  last_name varchar ,
	  phone_number varchar,
	  hire_date date,
	  department_id integer
);

CREATE OR REPLACE FUNCTION fill(count_of_rows integer) RETURNS void  AS $$
TRUNCATE ETL_1;
INSERT INTO ETL_1(first_name,last_name,phone_number,hire_date)
    SELECT generate_string(8),generate_string(8),generate_phone(),generate_date('1970-01-01')
					  FROM generate_series(1,count_of_rows);
	SELECT count(*) FROM ETL_1;
$$ LANGUAGE SQL;				  

SELECT fill(1000);
					  

CREATE TEMP TABLE tmp_ETL_1 (LIKE ETL_1);
COPY tmp_ETL_1  FROM 'C:/POSTGRESQL/test.csv' WITH DELIMITER ',' CSV HEADER;

---------------------------------------------------------------------------------------------------------------------
DROP FUNCTION test_ETL(text,text,text,text);

CREATE OR REPLACE FUNCTION test_ETL(start_date text,end_date text, s_interval text, ctl text) RETURNS void AS
$$
DECLARE
/*
$1 : = start date 
$2 : = INTERVAL 
$3 : = catalog
$4 : = name of file   - We have to generate for each of step 
*/
new_text1 text := 'COPY (SELECT * from tmp_ETL_1
			WHERE hire_date BETWEEN  $1::date AND ($1::date + $2::INTERVAL) ORDER BY hire_date ) 
					   			TO ''$3/
								$1||''----''|| $1::date + $2::INTERVAL'' 
								WITH DELIMITER '','' CSV HEADER ';
start_1 text := test_ETL.start_date;
end_d text := test_ETL.end_date;
rowcount integer =1;
BEGIN												
LOOP
			EXIT WHEN start_1::date >= end_date::date;
			EXECUTE FORMAT ('COPY (SELECT * FROM tmp_ETL_1
									WHERE hire_date
									BETWEEN  ''%1$s''::date AND (''%1$s''::date + ''%2$s''::INTERVAL) ORDER BY hire_date)  
					   			TO 
							''%3$s%1$s+%2$s''
								WITH DELIMITER '','' CSV HEADER '
						   ,start_1,test_ETL.s_interval,test_ETL.ctl );	
			GET DIAGNOSTICS rowcount = ROW_COUNT;
			RAISE NOTICE '%', rowcount;
		    start_1:= substring(to_char(start_1::date + test_ETL.s_interval::INTERVAL, 'YYYY-MM-DD') from 1 for 10);
			RAISE NOTICE '%', start_1;
END LOOP;							
														
END;
$$ LANGUAGE plpgsql;

SELECT test_ETL('2005-01-01','2010-01-01','1 year','C:/POSTGRESQL/');
























-------------------------------------------------------------------------
--FOR MY TEST







 
		
		
		DO
		$$
		DECLARE
		star_d text := '2013-01-01';
		step text := '3 DAYS';
		com text;
		BEGIN
			EXECUTE 'CREATE TEMP TABLE t23 AS 
			SELECT $1||''-----''|| $1::date + $2::INTERVAL ' USING star_d,step;
			
		END;
		$$ LANGUAGE plpgsql;
		
		SELECT * FROM t23;
		DROP TABLE t23;
		
		SELECT '2017-01-01'|| date '2000-01-01' + INTERVAL '1 DAY'
		FROM 
		SELECT date '2000-01-01' + INTERVAL '1 DAY'
		
		
		DO
		$$
		DECLARE
		star_d text := '2013-01-01';
		step text := '3 DAYS';
		com text;
		BEGIN
			EXECUTE 'CREATE TEMP TABLE t23 AS 
			SELECT * from tmp_ETL_1
			WHERE hire_date BETWEEN  $1::date AND ($1::date + $2::INTERVAL) ORDER BY hire_date
			' USING star_d,step;
			
		END;
		$$ LANGUAGE plpgsql;
		
		
	
		
		